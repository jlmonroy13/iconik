# Task ID: 16
# Title: Develop Edit Payment Method Form
# Status: pending
# Dependencies: 11, 13
# Priority: medium
# Description: Implement the form for editing existing payment methods with validation.
# Details:
Create `[id]/edit.tsx` in `payment-methods/`. Use React Hook Form + Zod for validation. Pre-fill form with existing data. Fields: Name, Type, integration fields (if any). Submit to server action. Example similar to create form, but with pre-filled data and edit action.

# Test Strategy:
Test form pre-fill, validation, submission, and error handling. Verify RBAC and spaId context.

# Subtasks:
## 1. Implement Pre-filling of Form Data [pending]
### Dependencies: None
### Description: Develop functionality to pre-fill form fields with existing data, using sources such as previous submissions or external data files. Ensure mapping between stored data and form fields is accurate and supports dynamic updates.
### Details:
Consider methods like mapping fields from previous submissions, using query strings, or linking dropdowns to external data sources. Support both static and dynamic pre-filling approaches.

## 2. Validate Pre-filled and User-entered Data [pending]
### Dependencies: 16.1
### Description: Implement validation logic to ensure all pre-filled and user-modified form data meets required formats, constraints, and business rules before submission.
### Details:
Include checks for required fields, correct data types, and any custom validation rules. Handle edge cases where pre-filled data may be outdated or incomplete.

## 3. Handle Update Submission [pending]
### Dependencies: 16.2
### Description: Develop the process for submitting updated form data, ensuring changes are correctly captured and persisted. Manage both successful updates and error handling.
### Details:
Ensure that only changed fields are updated if necessary, and provide user feedback on submission status. Support rollback or correction in case of validation or submission errors.

